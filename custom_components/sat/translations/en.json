{
  "config": {
    "step": {
      "user": {
        "title": "Smart Autotune Thermostat (SAT)",
        "description": "SAT is a smart thermostat that is capable of auto-tuning itself to optimize temperature control. Select the appropriate mode that matches your heating system.",
        "menu_options": {
          "mqtt": "OpenTherm Gateway ( MQTT )",
          "serial": "OpenTherm Gateway ( SERIAL )",
          "switch": "PID Thermostat with PWM ( ON/OFF )"
        }
      },
      "mqtt": {
        "title": "OpenTherm Gateway ( MQTT )",
        "description": "Please fill in the following details to set up the OpenTherm Gateway.",
        "data": {
          "name": "Name",
          "device": "Device",
          "mqtt_topic": "Top Topic"
        }
      },
      "serial": {
        "title": "OpenTherm Gateway ( SERIAL )",
        "description": "Please fill in the following details to set up the OpenTherm Gateway.",
        "data": {
          "name": "Name",
          "device": "URL"
        }
      },
      "switch": {
        "title": "PID Thermostat with PWM ( ON/OFF )",
        "description": "Please fill in the following details to setup the switch:",
        "data": {
          "name": "Name",
          "switch": "Switch"
        }
      },
      "sensors": {
        "title": "Configure sensors",
        "data": {
          "inside_sensor_entity_id": "Inside Sensor Entity",
          "outside_sensor_entity_id": "Outside Sensor Entity"
        }
      }
    },
    "error": {
      "connection": "Unable to connect.",
      "mqtt_component": "MQTT component is not enabled."
    },
    "abort": {
      "already_configured": "Gateway is already configured."
    }
  },
  "options": {
    "step": {
      "user": {
        "menu_options": {
          "general": "General",
          "presets": "Presets",
          "climates": "Climates",
          "contact_sensors": "Contact Sensors",
          "advanced": "Advanced"
        }
      },
      "general": {
        "title": "General",
        "data": {
          "setpoint": "Setpoint",
          "integral": "Integral",
          "derivative": "Derivative",
          "proportional": "Proportional",
          "duty_cycle": "Duty Cycle",
          "heating_system": "Heating System",
          "target_temperature_step": "Target Temperature Step",
          "heating_curve_coefficient": "Heating Curve Coefficient"
        }
      },
      "presets": {
        "title": "Presets",
        "data": {
          "away_temperature": "Away Temperature",
          "home_temperature": "Home Temperature",
          "sleep_temperature": "Sleep Temperature",
          "comfort_temperature": "Comfort Temperature",
          "activity_temperature": "Activity Temperature",
          "sync_climates_with_preset": "Synchronize climates with preset (sleep / away / activity)"
        }
      },
      "climates": {
        "title": "Climates (multi-room)",
        "data": {
          "climates": "Climates (rooms)",
          "main_climates": "Climates (main)",
          "sync_with_thermostat": "Synchronize setpoint with thermostat"
        }
      },
      "contact_sensors": {
        "title": "Contact Sensors",
        "data": {
          "window_sensor": "Window"
        }
      },
      "advanced": {
        "title": "Advanced",
        "data": {
          "simulation": "Simulation",
          "automatic_gains": "Automatic gains",
          "climate_valve_offset": "Climate valve offset",
          "overshoot_protection": "Overshoot Protection (with PWM)",
          "automatic_duty_cycle": "Automatic duty cycle (experimental)",
          "force_pulse_width_modulation": "Force Pulse Width Modulation",
          "min_num_updates": "Minimum number of updates required for auto-tuning",
          "sample_time": "Minimum time interval between updates to the PID controller",
          "window_minimum_open_time": "Minimum time for window to be open before reacting",
          "sensor_max_value_age": "Temperature Sensor maximum value age (before considering stall)"
        }
      }
    }
  }
}